// Generated by CIRCT firtool-1.75.0

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Include register initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for register randomization.

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module SourceB(	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
  input         clock,	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
  input         reset,	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
  output        io_req_ready,	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:35:14]
  input         io_req_valid,	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:35:14]
  input  [2:0]  io_req_bits_param,	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:35:14]
  input  [12:0] io_req_bits_tag,	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:35:14]
  input  [9:0]  io_req_bits_set,	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:35:14]
  input  [3:0]  io_req_bits_clients,	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:35:14]
  input         io_b_ready,	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:35:14]
  output        io_b_valid,	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:35:14]
  output [1:0]  io_b_bits_param,	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:35:14]
  output [5:0]  io_b_bits_source,	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:35:14]
  output [31:0] io_b_bits_address	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:35:14]
);

  reg  [3:0]  remain;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:46:25]
  wire [3:0]  todo = (|remain) ? remain : io_req_bits_clients;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:46:25, :51:23, :52:19]
  wire [2:0]  _next_T_2 = todo[2:0] | {todo[1:0], 1'h0};	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7, :52:19, generators/rocket-chip/src/main/scala/util/package.scala:253:{43,53}]
  wire [3:0]  _GEN = {~(_next_T_2 | {_next_T_2[0], 2'h0}), 1'h1} & todo;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7, :52:19, :53:{16,37}, generators/rocket-chip/src/main/scala/util/package.scala:253:{43,53}]
  `ifndef SYNTHESIS	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:59:12]
    always @(posedge clock) begin	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:59:12]
      if (~reset & {~io_req_valid, io_req_bits_clients} == 5'h0) begin	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:59:{12,13,27,50}]
        if (`ASSERT_VERBOSE_COND_)	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:59:12]
          $error("Assertion failed\n    at SourceB.scala:59 assert (!io.req.valid || io.req.bits.clients =/= 0.U)\n");	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:59:12]
        if (`STOP_COND_)	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:59:12]
          $fatal;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:59:12]
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  wire        _param_T_1 = ~(|remain) & io_req_valid;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:46:25, :51:23, :61:21, src/main/scala/chisel3/util/Decoupled.scala:51:35]
  wire        b_valid = (|remain) | io_req_valid;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:46:25, :51:23, :68:21]
  reg  [12:0] tag_r;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:72:52]
  wire [12:0] tag = (|remain) ? tag_r : io_req_bits_tag;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:46:25, :51:23, :72:{18,52}]
  reg  [9:0]  set_r;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:73:52]
  reg  [2:0]  param_r;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:74:56]
  always @(posedge clock) begin	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
    if (reset)	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
      remain <= 4'h0;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:46:25]
    else	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
      remain <= (remain | (_param_T_1 ? io_req_bits_clients : 4'h0)) & ~(io_b_ready & b_valid ? _GEN : 4'h0);	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:46:25, :47:30, :48:30, :49:{23,37,39}, :53:37, :62:{24,37}, :68:21, :69:{19,32}, src/main/scala/chisel3/util/Decoupled.scala:51:35]
    if (_param_T_1) begin	// @[src/main/scala/chisel3/util/Decoupled.scala:51:35]
      tag_r <= io_req_bits_tag;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:72:52]
      set_r <= io_req_bits_set;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:73:52]
      param_r <= io_req_bits_param;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:74:56]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
      `FIRRTL_BEFORE_INITIAL	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
    initial begin	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
      `ifdef INIT_RANDOM_PROLOG_	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
        `INIT_RANDOM_PROLOG_	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
        remain = _RANDOM[/*Zero width*/ 1'b0][3:0];	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7, :46:25]
        tag_r = _RANDOM[/*Zero width*/ 1'b0][16:4];	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7, :46:25, :72:52]
        set_r = _RANDOM[/*Zero width*/ 1'b0][26:17];	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7, :46:25, :73:52]
        param_r = _RANDOM[/*Zero width*/ 1'b0][29:27];	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7, :46:25, :74:56]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
      `FIRRTL_AFTER_INITIAL	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_req_ready = ~(|remain);	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7, :46:25, :51:23, :61:21]
  assign io_b_valid = b_valid;	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7, :68:21]
  assign io_b_bits_param = (|remain) ? param_r[1:0] : io_req_bits_param[1:0];	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7, :35:14, :46:25, :51:23, :74:{20,56}]
  assign io_b_bits_source = (_GEN[0] ? 6'h2C : 6'h0) | (_GEN[1] ? 6'h28 : 6'h0) | (_GEN[2] ? 6'h24 : 6'h0) | {_GEN[3], 5'h0};	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7, :53:37, src/main/scala/chisel3/util/Mux.scala:30:73, :32:36]
  assign io_b_bits_address = {tag[12], 3'h0, tag[11:0], (|remain) ? set_r : io_req_bits_set, 6'h0};	// @[generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/Parameters.scala:229:72, :230:8, generators/rocket-chip-inclusive-cache/design/craft/inclusivecache/src/SourceB.scala:33:7, :46:25, :51:23, :72:18, :73:{18,52}]
endmodule

